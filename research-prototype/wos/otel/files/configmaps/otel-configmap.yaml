apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: otel-collector
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/version: 0.96.0
  name: otel-collector-opentelemetry-collector
  namespace: otel
data:
  relay: |
    exporters:
      prometheus/local:
        endpoint: "0.0.0.0:8080"
        send_timestamps: true
        metric_expiration: 180m
        resource_to_telemetry_conversion:
          enabled: true
      debug:
        verbosity: normal
        sampling_initial: 2
        sampling_thereafter: 500
      otlphttp/loki:
        endpoint: http://loki:3100/otlp
        tls:
          insecure: true
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
      basicauth/server:
        htpasswd: 
          inline: |
            myuser:mypassword
    processors:
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      attributes:
        actions:
        - action: extract
          key: log.file.path
          pattern: \/var\/log\/pods\/(?P<loki_temp>[0-9a-z-]*)_.*
        - action: upsert
          value: loki_temp
          key: loki.tenant      
      transform:
        error_mode: ignore
        log_statements:
        - context: log
          statements:
          - set(attributes["cache"], ParseJSON(body)) where IsMatch(body, "^\\{")
          - set(attributes["tenant"], attributes["cache"]["kubernetes"]["namespace_name"])
          - set(attributes["loki.tenant"], "tenant")
          - delete_key(attributes, "cache")
    receivers:
      otlp:
        protocols:
          http:
            endpoint: ${env:MY_POD_IP}:4318
            cors:
              allowed_origins: ["*"]
            tls:
              cert_file: /certs/tls.crt
              key_file: /certs/tls.key
            auth:
              authenticator: basicauth/server
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
            auth:
              authenticator: basicauth/server
            tls:
              cert_file: /certs/tls.crt
              key_file: /certs/tls.key
    service:
      extensions:
      - health_check
      - basicauth/server
      pipelines:
        logs:
          exporters:
          - debug
          - otlphttp/loki
          processors:
          - memory_limiter
          - transform
          - attributes
          receivers:
          - otlp
        metrics:
          exporters:
          - debug
          - prometheus/local
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
        traces:
          exporters:
          - debug
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888
